name: VM
on:
  push:
    branches:
      - master
    tags:
      - '*'

env:
  cwd: ${{github.workspace}}/packages/vm

defaults:
  run:
    working-directory: packages/vm

jobs:
  test-vm-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v1

      - name: Dependency cache
        uses: actions/cache@v2
        id: cache
        with:
          key: VM-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          path: '**/node_modules'

      # Installs root dependencies, ignoring Bootstrap All script.
      # Bootstraps the current package only
      - run: npm install --ignore-scripts && npm run bootstrap:vm
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ${{github.workspace}}

      # Builds current package and the ones it depends from.
      - run: npm run build:vm
        working-directory: ${{github.workspace}}

      - run: npm run coverage
      
      - uses: codecov/codecov-action@v1
        with:
          file: ${{ env.cwd }}/coverage/lcov.info
          flags: vm

      - run: npm run test:API
      - run: npm run test:API:browser
      - run: npm run lint
  
  test-vm-state:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v1

      - name: Dependency cache
        uses: actions/cache@v2
        id: cache
        with:
          key: VM-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          path: '**/node_modules'

      # Installs root dependencies, ignoring Bootstrap All script.
      # Bootstraps the current package only
      - run: npm install --ignore-scripts && npm run bootstrap:vm
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ${{github.workspace}}

      # Builds current package and the ones it depends from.
      - run: npm run build:vm
        working-directory: ${{github.workspace}}

      - run: npm run test:state:selectedForks

  test-vm-blockchain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v1

      - name: Dependency cache
        uses: actions/cache@v2
        id: cache
        with:
          key: VM-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          path: '**/node_modules'

      # Installs root dependencies, ignoring Bootstrap All script.
      # Bootstraps the current package only
      - run: npm install --ignore-scripts && npm run bootstrap:vm
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ${{github.workspace}}

      # Builds current package and the ones it depends from.
      - run: npm run build:vm
        working-directory: ${{github.workspace}}

      - run: npm run test:blockchain
